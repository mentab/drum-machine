{"version":3,"sources":["components/DrumDisplay.js","components/DrumPad.js","drums.js","components/DrumMachine.js","index.js"],"names":["DrumDisplay","props","display","react_default","a","createElement","Jumbotron","id","DrumPad","src","desc","click","Card","body","inverse","style","backgroundColor","borderColor","CardTitle","CardText","Button","onClick","className","drums","DrumMachine","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleKeyDown","event","handlePlay","key","handleClick","target","innerText","clearTimeout","timeout","drumKey","find","drum","document","getElementById","play","setState","setTimeout","state","audio","addEventListener","removeEventListener","drumPads","map","i","components_DrumPad","Container","Row","Col","components_DrumDisplay","CardColumns","Component","ReactDOM","render","components_DrumMachine"],"mappings":"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","file":"static/js/main.f8c44ed5.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { Jumbotron } from 'reactstrap';\r\n\r\nconst DrumDisplay = (props) => {\r\n    const { display } = props;\r\n\treturn (\r\n        <Jumbotron id=\"display\">{display}</Jumbotron>\r\n    );\r\n};\r\n\r\nDrumDisplay.propTypes = {\r\n\tdisplay: PropTypes.string\r\n}\r\n\r\nexport default DrumDisplay;","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { Card, Button, CardTitle, CardText } from 'reactstrap';\r\n\r\nconst DrumPad = (props) => {\r\n\tconst { id, src, desc, click } = props;\r\n\treturn (\r\n\t\t<Card body inverse style={{ backgroundColor: '#333', borderColor: '#333' }}>\r\n        \t<CardTitle>{id}</CardTitle>\r\n        \t<CardText>{desc}</CardText>\r\n        \t<Button onClick={click} className=\"drum-pad\" id={desc}>{id}<audio className=\"clip\" id={id} src={src}></audio></Button>\r\n      \t</Card>\r\n\t);\r\n};\r\n\r\nDrumPad.propTypes = {\r\n\tid: PropTypes.string,\r\n\tsrc: PropTypes.string,\r\n\tdesc: PropTypes.string,\r\n\tclick: PropTypes.func\r\n}\r\n\r\nexport default DrumPad;","const drums = [\r\n\t{\r\n\t\tid: 'Q',\r\n\t\tsrc: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3',\r\n\t\tdesc: 'heater-1'\r\n\t},\r\n\t{\r\n\t\tid: 'W',\r\n\t\tsrc: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3',\r\n\t\tdesc: 'heater-2'\r\n\t},\r\n\t{\r\n\t\tid: 'E',\r\n\t\tsrc: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3',\r\n\t\tdesc: 'heater-3'\r\n\t},\r\n\t{\r\n\t\tid: 'A',\r\n\t\tsrc: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3',\r\n\t\tdesc: 'chord-1'\r\n\t},\r\n\t{\r\n\t\tid: 'S',\r\n\t\tsrc: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3',\r\n\t\tdesc: 'chord-2'\r\n\t},\r\n\t{\r\n\t\tid: 'D',\r\n\t\tsrc: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3',\r\n\t\tdesc: 'chord-3'\r\n\t},\r\n\t{\r\n\t\tid: 'Z',\r\n\t\tsrc: 'https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3',\r\n\t\tdesc: 'dsc-oh'\r\n\t},\r\n\t{\r\n\t\tid: 'X',\r\n\t\tsrc: 'https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3',\r\n\t\tdesc: 'give-us-a-light'\r\n\t},\r\n\t{\r\n\t\tid: 'C',\r\n\t\tsrc: 'https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3',\r\n\t\tdesc: 'side-stick'\r\n\t}\r\n];\r\n\r\nexport default drums;","import React, { Component } from 'react';\r\nimport DrumDisplay from './DrumDisplay';\r\nimport DrumPad from './DrumPad';\r\nimport { Container, Row, Col, CardColumns } from 'reactstrap';\r\nimport drums from '../drums';\r\n\r\nclass DrumMachine extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tdisplay: 'Press a key to play a sound !'\r\n\t\t}\r\n\t\tthis.audio = null;\r\n\t\tthis.timeout = null;\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tdocument.addEventListener(\"keydown\", this.handleKeyDown);\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tdocument.removeEventListener(\"keydown\", this.handleKeyDown);\r\n\t}\r\n\r\n\thandleKeyDown = (event) => {\r\n\t\tthis.handlePlay(event.key);\r\n\t}\r\n\r\n\thandleClick = (event) => {\r\n\t\tthis.handlePlay(event.target.innerText);\r\n\t}\r\n\r\n\thandlePlay = (key) => {\r\n\t\tclearTimeout(this.timeout);\r\n\r\n\t\tconst drumKey = drums.find(drum => drum.id === key);\r\n\r\n\t\tif (drumKey) {\r\n\t\t\tdocument.getElementById(key).play();\r\n\t\t\tthis.setState({\r\n\t\t\t\tdisplay: drumKey.id\r\n\t\t\t});\r\n\t\t\tthis.timeout = setTimeout(() => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tdisplay: 'Press a key to play a new sound !'\r\n\t\t\t\t})\r\n\t\t\t}, 1000);\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst click = this.handleClick;\r\n\t\tconst { display } = this.state;\r\n\t\tconst drumPads = drums.map(i => <DrumPad id={i.id} key={i.id} src={i.src} desc={i.desc} click={click}/>);\r\n\t\treturn (\r\n\t\t<Container id=\"drum-machine\">\r\n\t\t\t<Row>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<DrumDisplay display={display}/>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<CardColumns>\r\n\t\t\t\t\t\t{drumPads}\r\n\t\t\t\t\t</CardColumns>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Container>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default DrumMachine;","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport DrumMachine from './components/DrumMachine';\n\nReactDOM.render(<DrumMachine />, document.getElementById('root'));\n"],"sourceRoot":""}